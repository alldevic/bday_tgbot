version: '3.4'

services:

  admin_panel:
    container_name: admin
    env_file: .env
    user: ${CURRENT_UID}
    volumes:
      - ./:/app/
    build:
      context: .
      args:
        - DEBUG=True
    restart: on-failure
    entrypoint: python3
    command: ./manage.py runserver 0.0.0.0:8000
    ports:
      - 80:8000
    depends_on:
      - postgres_db
    networks:
      private_network:

  postgres_db:
    container_name: db
    env_file: .env
    image: postgres:11-alpine
    restart: on-failure
    volumes:
      - bday_db_data:/var/lib/postgresql/data
    networks:
      private_network:

  tgbot:
    container_name: bday_tgbot
    env_file: .env
    user: ${CURRENT_UID}
    volumes:
      - ./:/app/
    build:
      context: .
      args:
        - DEBUG=True
    restart: on-failure
    entrypoint: python3
    command: ./manage.py bot
    depends_on:
      - admin_panel
      - postgres_db
    networks:
      private_network:


networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16


volumes:
  bday_db_data:
